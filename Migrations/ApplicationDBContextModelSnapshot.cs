// <auto-generated />
using EmployeesMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeesMVC.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeesMVC.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Företaget"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Andra företaget"
                        });
                });

            modelBuilder.Entity("EmployeesMVC.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bo.ek@email.com",
                            Name = "Bo Ek"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Email = "eva.boo@email.com",
                            Name = "Eva Boo"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            Email = "ludo.hansi@email.com",
                            Name = "Ludo Hansi"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            Email = "leena.holzt@email.com",
                            Name = "Leena Holzt"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ann.ahl@email.com",
                            Name = "Ann Ahl"
                        });
                });

            modelBuilder.Entity("EmployeesMVC.Models.Employee", b =>
                {
                    b.HasOne("EmployeesMVC.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EmployeesMVC.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
